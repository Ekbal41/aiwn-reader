<!DOCTYPE html>
<html lang="en">
  <head>
    <title>AIWN Reader</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css"
    />
    <style>
      .chapter-url {
        text-decoration: underline;
        color: #007bff;
      }
    </style>
  </head>
  <body class="d-flex flex-column min-vh-100">
    <!-- Main Content -->
    <main class="container my-3 my-md-5 flex-grow-1 pt-md-5">
      <div class="form-container mx-auto" style="max-width: 500px">
        {% if error %}
        <div class="alert alert-danger text-center">{{ error }}</div>
        {% endif %}
        <div
          class="d-flex justify-content-between align-items-center mb-3 w-100"
        >
          <h3>AIWN Reader</h3>
          <div class="d-flex justify-content-end align-items-center gap-2">
            <button
              type="button"
              class="btn btn-outline-primary"
              data-bs-toggle="offcanvas"
              data-bs-target="#chapterOffcanvas"
            >
              <i class="bi bi-card-list"></i>
            </button>
            <a href="/api-key" class="btn btn-primary">
              <i class="bi bi-key"></i>
            </a>
          </div>
        </div>

        <form
          id="translateForm"
          action="/translate"
          method="POST"
          onSubmit="showLoading()"
        >
          <div class="mb-3">
            <input
              type="url"
              name="url"
              id="url"
              class="form-control"
              placeholder="Enter Chapter URL (e.g., https://example.com/35464/3747.html)"
              required
            />
            <input type="hidden" name="apiKey" id="apiKey" />
          </div>
          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary" id="tbutton">
              Translate
            </button>
          </div>
        </form>
        <ol class="mt-4">
          <li>
            <strong>Go to Google AI Studio:</strong>
            <a href="https://aistudio.google.com/" target="_blank"
              >https://aistudio.google.com/</a
            >
          </li>
          <li>
            <strong>Sign In:</strong> Log in using your Google account if you're
            not already signed in.
          </li>
          <li>
            <strong>Accept Terms of Service:</strong> Accept them if prompted on
            first use.
          </li>
          <li>
            <strong>Create or Select a Project:</strong>
            Choose a project to link your API key to.
          </li>
          <li>
            <strong>Go to the API Keys Section:</strong><br />
            Click your profile icon (top right) â†’ Select
            <strong>"API Keys"</strong>.<br />
            Or go directly to:
            <a href="https://aistudio.google.com/app/apikey" target="_blank">
              https://aistudio.google.com/app/apikey
            </a>
          </li>
          <li>
            <strong>Generate API Key:</strong><br />
            Click <strong>"Create API Key"</strong>, then copy and securely
            store your key.
          </li>
          <li>
            <strong>Set Your API Key:</strong><br />
            Click the <strong>ðŸ”‘</strong> icon, enter your API key, and select
            <strong>Save API Key</strong>. Once saved, you'll be able to
            translate any chapter.
          </li>
        </ol>
      </div>
    </main>

    <!-- Offcanvas for Saved Chapters -->
    <div
      class="offcanvas offcanvas-start"
      tabindex="-1"
      id="chapterOffcanvas"
      aria-labelledby="chapterOffcanvasLabel"
    >
      <div class="offcanvas-header bg-light border-bottom">
        <div class="d-flex justify-content-end align-items-center gap-2">
          <h5 class="m-0">AIWN</h5>
          <div class="badge badge-sm text-bg-primary">
            <span id="scbadge">0 </span> CHAPTERS
          </div>
        </div>

        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="offcanvas"
          aria-label="Close"
        ></button>
      </div>
      <div class="offcanvas-body">
        <ul class="list-group" id="chapterList" style="cursor: pointer"></ul>
        <button
          class="btn btn-danger mt-3 w-100"
          id="clearAllCap"
          onclick="clearChapters()"
        >
          Clear All Chapters
        </button>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      function showLoading() {
        const button = document.getElementById("tbutton")
        button.disabled = true
        button.innerHTML = `
      <span class="spinner-border spinner-border-sm" 
      role="status" aria-hidden="true"></span>
      Translating...`
      }
      // Load saved chapters into offcanvas
      function loadChapters() {
        const chapterList = document.getElementById("chapterList")
        const clearAllCapButton = document.getElementById("clearAllCap")
        clearAllCapButton.style.display = "none"
        chapterList.innerHTML = `
        <div class="d-flex justify-content-center align-items-center" style="height: calc(100vh - 100px);">
        <div class="text-center text-muted d-flex justify-content-center align-items-center flex-column">
        <i class="bi bi-journal-x" style="font-size: 3rem;"></i>
        <h4 class="mt-3">No Saved Chapters</h4>
        <p class="mb-0 w-75">You haven't saved any chapters yet. Start by adding one!</p>
        </div></div>`

        const scbadge = document.getElementById("scbadge")
        const savedChapters = Object.keys(localStorage).filter(
          (key) => !key.startsWith("key") && !key.startsWith("theme")
        )
        scbadge.innerHTML = savedChapters.length

        if (savedChapters.length > 0) {
          clearAllCapButton.style.display = "block"
          chapterList.innerHTML = ""
        }
        for (let i = 0; i < localStorage.length; i++) {
          const url = localStorage.key(i)
          try {
            const chapter = JSON.parse(localStorage.getItem(url))
            if (chapter && chapter.translated && chapter.title) {
              const truncatedUrl =
                url.slice(0, 25) + (url.length > 15 ? "..." : "")
              const truncatedTitle = chapter.title.slice(0, 25)
              const li = document.createElement("li")
              li.className = "list-group-item chapter-item"
              li.innerHTML = `
                <div class="d-flex justify-content-between align-items-end"><div class="chapter-info">
                  <strong>${truncatedTitle}...</strong><br>
                  <small class="chapter-url" >${truncatedUrl}</small><br>
                  <small style="font-family: monospace;text-decoration: underline;">${new Date(
                    chapter.timestamp
                  ).toLocaleString()}</small>
                </div>
                <button class="btn btn-sm btn-danger mb-2" onclick="deleteChapter('${url}')"><i class="bi bi-trash-fill"></i></button></div>
              `
              li.querySelector(".chapter-info").onclick = () => {
                const form = document.createElement("form")
                form.method = "POST"
                form.action = "/translate"
                const input = document.createElement("input")
                input.type = "hidden"
                input.name = "storedChapter"
                input.value = JSON.stringify(chapter)
                form.appendChild(input)
                const apiKeyInput = document.createElement("input")
                apiKeyInput.type = "hidden"
                apiKeyInput.name = "apiKey"
                apiKeyInput.value = localStorage.getItem("key") || ""
                form.appendChild(apiKeyInput)
                document.body.appendChild(form)
                form.submit()
              }
              chapterList.appendChild(li)
            }
          } catch (e) {
            console.error("Error parsing chapter:", url, e)
          }
        }
      }

      function deleteChapter(url) {
        localStorage.removeItem(url)
        loadChapters()
      }

      function clearChapters() {
        Object.keys(localStorage).forEach((key) => {
          if (!key.startsWith("key") && !key.startsWith("theme")) {
            localStorage.removeItem(key)
          }
        })
        loadChapters()
      }

      document
        .getElementById("translateForm")
        .addEventListener("submit", (e) => {
          const url = document.getElementById("url").value
          const apiKey = localStorage.getItem("key") || ""
          document.getElementById("apiKey").value = apiKey
          const storedChapter = localStorage.getItem(url)
          if (storedChapter) {
            e.preventDefault()
            const form = document.createElement("form")
            form.method = "POST"
            form.action = "/translate"
            const input = document.createElement("input")
            input.type = "hidden"
            input.name = "storedChapter"
            input.value = storedChapter
            form.appendChild(input)
            const apiKeyInput = document.createElement("input")
            apiKeyInput.type = "hidden"
            apiKeyInput.name = "apiKey"
            apiKeyInput.value = apiKey
            form.appendChild(apiKeyInput)
            document.body.appendChild(form)
            form.submit()
          }
        })
      window.onload = loadChapters
    </script>
  </body>
</html>
